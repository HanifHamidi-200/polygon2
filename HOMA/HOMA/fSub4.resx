<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /w8yXLLAQoug2QAAAABJRU5ErkJggg==
</value>
  </data>
</root>